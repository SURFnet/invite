openapi: 3.0.0
info:
  title: GuestApplication API
  description: This describes the REST interface to the guestapplication API
  version: 0.0.1
servers:
  - url: http://eduid-guest.test.surfnet.nl/v1
    description: Public testing enviroment
paths:
  /role:
    get:
      summary: Get a role
      description: Retrieves a single role
      parameters:
        - name: id
          in: query
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':    # status code
          description: a single role
          content:
            application/json:
              schema:
                $ref: './schemas/Role.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
    post:
      summary: Create a Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/Role.yaml'
      responses:
        '201':
          description: The role was created, the new role is returned
          content:
            application/json:
              schema:
                $ref: './schemas/Role.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
    put:
      summary: Update a Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/Role.yaml'
      responses:
        '200':
          description: OK
        default:
          description: The role was updated, the new role is returned
          content:
            application/json:
              schema:
                $ref: './schemas/Role.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
    delete:
      summary: Deletes a role
      description: Deletes the role specified by the id
      parameters:
        - name: id
          in: query
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':    # status code
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /roles:
    get:
      summary: List roles
      description: Retrieves a list of roles
      responses:
        '200':    # status code
          description: A JSON array of roles
          content:
            application/json:
              schema:
                $ref: './schemas/Roles.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /guest:
    get:
      summary: Get a guest
      description: Retrieves the information of a single guest
      parameters:
        - name: id
          in: query
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':    # status code
          description: a single role
          content:
            application/json:
              schema:
                $ref: './schemas/Guest.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /guests:
    get:
      summary: List guests
      description: Retrieves a list of guests
      responses:
        '200':    # status code
          description: A JSON array of guests
          content:
            application/json:
              schema:
                $ref: './schemas/Guests.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /invite:
    post:
      summary: Send an invite
      description: Send an invite for a role to a guest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/Invite.yaml'
      responses:
        '200':    # status code
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /user:
    get:
      summary: Returns an user
      description: Retrieves the information of a single inviter or roleadmin
      parameters:
        - name: id
          in: query
          description: User ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':    # status code
          description: a single role
          content:
            application/json:
              schema:
                $ref: './schemas/User.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /users:
    get:
      summary: List users
      description: Retrieves a list of inviters and roleadmins
      responses:
        '200':    # status code
          description: A JSON array of users
          content:
            application/json:
              schema:
                $ref: './schemas/Users.yaml'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----

components:
  schemas:
    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: integer
          enum: [200,204,401,404]
        message:
          type: string
      required:
        - code
        - message
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: "Unauthorized"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: "Not found"
